/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as VelocityIndexRouteImport } from './routes/velocity/index'
import { Route as VelocitySprintsRouteImport } from './routes/velocity/sprints'
import { Route as VelocityMembersRouteImport } from './routes/velocity/members'
import { Route as VelocityBoardRouteImport } from './routes/velocity/board'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const VelocityIndexRoute = VelocityIndexRouteImport.update({
  id: '/velocity/',
  path: '/velocity/',
  getParentRoute: () => rootRouteImport,
} as any)
const VelocitySprintsRoute = VelocitySprintsRouteImport.update({
  id: '/velocity/sprints',
  path: '/velocity/sprints',
  getParentRoute: () => rootRouteImport,
} as any)
const VelocityMembersRoute = VelocityMembersRouteImport.update({
  id: '/velocity/members',
  path: '/velocity/members',
  getParentRoute: () => rootRouteImport,
} as any)
const VelocityBoardRoute = VelocityBoardRouteImport.update({
  id: '/velocity/board',
  path: '/velocity/board',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/velocity/board': typeof VelocityBoardRoute
  '/velocity/members': typeof VelocityMembersRoute
  '/velocity/sprints': typeof VelocitySprintsRoute
  '/velocity': typeof VelocityIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/velocity/board': typeof VelocityBoardRoute
  '/velocity/members': typeof VelocityMembersRoute
  '/velocity/sprints': typeof VelocitySprintsRoute
  '/velocity': typeof VelocityIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/velocity/board': typeof VelocityBoardRoute
  '/velocity/members': typeof VelocityMembersRoute
  '/velocity/sprints': typeof VelocitySprintsRoute
  '/velocity/': typeof VelocityIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/velocity/board'
    | '/velocity/members'
    | '/velocity/sprints'
    | '/velocity'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/velocity/board'
    | '/velocity/members'
    | '/velocity/sprints'
    | '/velocity'
  id:
    | '__root__'
    | '/'
    | '/velocity/board'
    | '/velocity/members'
    | '/velocity/sprints'
    | '/velocity/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  VelocityBoardRoute: typeof VelocityBoardRoute
  VelocityMembersRoute: typeof VelocityMembersRoute
  VelocitySprintsRoute: typeof VelocitySprintsRoute
  VelocityIndexRoute: typeof VelocityIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/velocity/': {
      id: '/velocity/'
      path: '/velocity'
      fullPath: '/velocity'
      preLoaderRoute: typeof VelocityIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/velocity/sprints': {
      id: '/velocity/sprints'
      path: '/velocity/sprints'
      fullPath: '/velocity/sprints'
      preLoaderRoute: typeof VelocitySprintsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/velocity/members': {
      id: '/velocity/members'
      path: '/velocity/members'
      fullPath: '/velocity/members'
      preLoaderRoute: typeof VelocityMembersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/velocity/board': {
      id: '/velocity/board'
      path: '/velocity/board'
      fullPath: '/velocity/board'
      preLoaderRoute: typeof VelocityBoardRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  VelocityBoardRoute: VelocityBoardRoute,
  VelocityMembersRoute: VelocityMembersRoute,
  VelocitySprintsRoute: VelocitySprintsRoute,
  VelocityIndexRoute: VelocityIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
